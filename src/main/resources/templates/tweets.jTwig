  <!DOCTYPE html>
  <html>
    <head>
        <title>PUFF Messaging Tweets</title>
        <style>
           header {
            background-color:#262626;
            width:100%;
            height:50px;
            box-shadow: 0px 1px 50px #5E5E5E;
            position:fixed;
            top:0px;
            color: white;
            z-index: 100;
          }
          
          input {
          	margin-left: 1em;
		  }
		  
          .new_Tweet {
            text-align: center;
            padding: 1em;
            overflow: hidden;
            background-color: #d1d1e0;
            box-shadow: 0px 1px 50px #5E5E5E;
          }

          .following_tweets {
            text-align: center;
            padding: 1em;
            overflow: scroll;
            background-color: #f0f0f5;
            box-shadow: 0px 1px 50px #5E5E5E;
            height: 60vh;
            width: 70%;
            float: right;
          }

          .search {
            margin-left: 20px;
          }

          #popular_tweeters_aside {
            float: left;
            padding-left: 2em;
            
            padding-bottom: 2em;
            width: 14%;
          }

		div {
			margin-top: 1em;
		}

		#logoff {
			position: absolute;
			right: 10px;
		}
	  
		table{
  			border-collapse: collapse;
  			width: 100%;
		}
		
		th, td {
 		   height: 40px;
 		   
		}
		
		tr:nth-child(even) {
			background-color: #d1d1e0;
		}

		button {
  			display: inline-block;
  			font-size: 16px;
  			cursor: pointer;
  			text-align: center;
  			text-decoration: none;
  			outline: none;
  			background-color: #53575e;
  			color: #fff;
  			border: none;
  			border-radius: 10px;
  			box-shadow: 0 3px #999;
  			margin-left: 1em;
    		margin-right: 1em;
		}

		button:hover {background-color: #3e8e41}

		button:active {
  			background-color: #3e8e41;
  			box-shadow: 0 5px #666;
  			transform: translateY(4px);
  		}
  		
	    #hrefLogoff:link {
	      	color: white;
 	   		text-decoration: none;
 	   		font-size: 16px;
		}

		#hrefLogoff:visited {
			color: white;
    		text-decoration: none;
    		font-size: 16px;
		}
		
		#hrefLogoff:hover {
			color: white;
		}
		
    .redbox {
      border: solid red 4px;
    }

		#user_info {
			text-align: center;
			margin: 1px;
		}
        </style>
      </head>
    <body>
      <header id="header">
          <div>
            <input type="text" name ="search" id="search" {% if badsearch %}class="redbox"{% endif %}>
            <button id="searchbutton">Lookup User</button>
            <button id="tweetpage">Home</button>
            <button id="logoff"><a href = "/logoff" id = "hrefLogoff">Logoff</a></button>
          </div>
      </header>
          <br>
          <br>
          <br>
        <section class = "new_Tweet">
          <div id="user_info">
          	<p id="phrase">Hello <span id="username">{{username}}</span>.  What's happening in your world?</p>
          </div>
          <textarea rows="1 " cols="120" id = "tweetTextArea" maxlength="140"></textarea>
          <button type="submit" id="tweet">Tweet</button>
        </section>
          <br>
          <aside id="popular_tweeters_aside">
            <h3>Popular Tweeters</h3>
            <div id = "popular_tweeters">
            </div>
          </aside>
      <section id="following_tweets_section" class = "following_tweets">
      <table id = "following_tweets"> 
      </table> 
      </section>
    </body>
    <script>
/*Script to power the user lookup*/
    var button = document.getElementById('searchbutton');
      button.onclick = function () {
      var link = document.getElementById("search").value;
      window.location = "/userActivity?UserName=%27"+link+"%27";}

/*Script to go home*/
    var button = document.getElementById('tweetpage');
      button.onclick = function () {
      window.location = "/createTweetHTML";}

/*Script to build popular tweeters aside */
       function buildTweeters(){	
        	let xhr = new XMLHttpRequest();
            xhr.open('GET', '/popularTweeters');
            	xhr.onload = function(evt) {
            	if (xhr.status === 200) {
              		var response = JSON.parse(xhr.responseText);
              		document.getElementById("popular_tweeters").innerHTML = '';
              		for(var i = 0; i < response.length; i++){              		
              			var popularDiv = "popularDiv" + i;
              			var div = document.createElement('div');
              			div.setAttribute('id', popularDiv);
              		
              			var popularBtn = "popularBtn" + i;		
              			var btn = document.createElement('BUTTON');
              			var btnText = document.createTextNode('Follow');
              			btn.appendChild(btnText);
              			btn.setAttribute('tweeter', response[i]);
               			
               			var hrefValue = "/userActivity?UserName='" + response[i] + "'";
               			var createA = document.createElement('a');
        				var createAText = document.createTextNode(response[i]);
        				createA.setAttribute('href', hrefValue);
        				createA.appendChild(createAText);
        				
               			document.getElementById('popular_tweeters').appendChild(div);
               			document.getElementById(popularDiv).appendChild(btn);
               			document.getElementById(popularDiv).appendChild(createA);
               		};
                } else {
                    console.log('Request popular tweeters failed.  Returned status of ' + xhr.status);
                }
            };
            xhr.send();
	    }
	    buildTweeters();
	    
/* Script to build tweets */
        function buildTweets() {	
        	let xhr = new XMLHttpRequest();
            xhr.open('GET', '/tweetList');
            	xhr.onload = function(evt) {
            	if (xhr.status === 200) {
              		var response = JSON.parse(xhr.responseText);
                  	var table = document.getElementById("following_tweets");
                  	table.innerHTML = '';
                  	var row = table.insertRow(0);
                  	row.insertCell(0);
                    row.insertCell(1).innerHTML="<b>Tweet</b>";
                    row.insertCell(2).innerHTML="<b>Author</b>";
                    row.insertCell(3).innerHTML="<b>Post Date</b>";
                    row.insertCell(4).innerHTML;
                    row.insertCell(5).innerHTML = "<b>Number of Likes</b>"
                    
              		for(var i = 0; i < response.length; i++){            		
              			var username = document.getElementById('username').innerHTML;
              			
              			var tweet = "tweet" + i;
                    	var row = table.insertRow(i + 1);
              			
              			var like = 'like';
              			var unlike = 'unlike'
              			var likeBtn = "likeBtn" + i;		
     					var tweetLiked = false;
     					
              			var likeButton = document.createElement('BUTTON');
              			if(response[i].liked === 'not liked') {
              				var btnText = document.createTextNode('Like');
              				likeButton.setAttribute('likeCheck', 'unliked');
              			} else {
              				var btnText = document.createTextNode('Unlike');
              				likeButton.setAttribute('likeCheck', 'liked');
              			}
              			likeButton.appendChild(btnText);
              			likeButton.setAttribute('tweetId', response[i].tweetId);
              			if(response[i].createdByName !== username) {
              				row.insertCell(0).appendChild(likeButton);
              			} else {
              				row.insertCell(0).innerHTML = '';
              			}
              			
              			row.insertCell(1).innerHTML=response[i].tweet;

              			
              			var hrefValue = "/userActivity?UserName='" + response[i].createdByName + "'";
               			var createA = document.createElement('a');
        				var createAText = document.createTextNode(response[i].createdByName);
        				createA.setAttribute('href', hrefValue);
        				createA.appendChild(createAText);
        				var newCell = row.insertCell(2);
        				newCell.appendChild(createA);
              			
                    	var date = response[i].createTimestamp.substring(0, 10);
                    	var time = response[i].createTimestamp.substring(11, 19);
                       	time = convertTime(time);
                    	date = date + " " + time;
              			row.insertCell(3).innerHTML=date;
              			
              			var unfollowBtn = "unfollowBtn" + i;		
              			var btn = document.createElement('BUTTON');
              			var btnText = document.createTextNode('Unfollow');
              			btn.appendChild(btnText);
              			btn.setAttribute('tweeter', response[i].createdByName);
              			btn.setAttribute('unfollow', 'unfollow');
              			if(response[i].createdByName !== username) {
                    		row.insertCell(4).appendChild(btn);
                    	} else {
                    		row.insertCell(4).innerHTML='';
                    	}
                    row.insertCell(5).innerHTML=response[i].like_count;
               		};
                } else {
                    console.log('Requesting tweets failed.  Returned status of ' + xhr.status);
                }
            };
            xhr.send();
        }
        buildTweets();

/*Script to send tweet to database */        
    {
 	  	let tweet_button = document.getElementById('tweet');
 		tweet_button.onclick = function () {
 			if(document.getElementById('tweetTextArea').value !==''){
 				var xhr = new XMLHttpRequest();
     			xhr.open('POST', '/submitTweet');
     			xhr.setRequestHeader('Content-Type', 'application/json');
     			xhr.onload = function() {
         			if (xhr.status === 200) {
             			console.log(xhr.responseText);
             			document.getElementById('tweetTextArea').value='';
             			buildTweets();
         			} else if (xhr.status !== 200) {
             			console.log('Request failed.  Returned status of ' + xhr.status);
         			}
     			};
     			var tweet = {tweet: document.getElementById("tweetTextArea").value};

     			xhr.send(JSON.stringify(tweet));
     		}
 	    }
	}

/*Script to follow someone*/   	
   	{
   		let tableClick = document.getElementById('popular_tweeters');
    	tableClick.addEventListener('click', function(evt) {
    		if (evt.target.tagName === 'BUTTON') {
    			let tweeter = evt.target.getAttribute('tweeter');

 				let xhr = new XMLHttpRequest();
     			xhr.open('POST', '/submitFollow');
     			xhr.setRequestHeader('Content-Type', 'application/json');
     			xhr.onload = function() {
         			if (xhr.status === 200) {
             			console.log(xhr.responseText);
             			buildTweets();
             			buildTweeters();
         			} else if (xhr.status !== 200) {
             			console.log('Request failed.  Returned status of ' + xhr.status);
         			}
     			};
     			
     			let tweet = {follows: tweeter};
     	
     			xhr.send(JSON.stringify(tweet));
    		}
    	});
    }

/*Script to unfollow someone*/
   	{
   		let tableClick = document.getElementById('following_tweets');
    	tableClick.addEventListener('click', function(evt) {
    		if (evt.target.tagName === 'BUTTON') {
    			let tweeter = evt.target.getAttribute('tweeter');
				let unfollowCheck = evt.target.getAttribute('unfollow');
				
				if (unfollowCheck === 'unfollow') {
 					let xhr = new XMLHttpRequest();
     				xhr.open('POST', '/submitUnfollow');
     				xhr.setRequestHeader('Content-Type', 'application/json');
     				xhr.onload = function() {
         				if (xhr.status === 200) {
             				console.log(xhr.responseText);
             				buildTweets();
             				buildTweeters();
         				} else if (xhr.status !== 200) {
             				console.log('Request failed.  Returned status of ' + xhr.status);
         				}
     				}
     			
     				let tweet = {follows: tweeter};
     	
     				xhr.send(JSON.stringify(tweet));
    			}
    		}
		});
    }

/*Script to go to search for a  user's page */
   	{
   		let button = document.getElementById('search');
		button.onclick = function (evt) {
   			let user = evt.target.getAttribute('searchText').value;
   			console.log(user);		
   		}
   	}
   	
/*   	function refreshTweets() {
    	setInterval(function(){
    		buildTweets();
    		console.log("refresh");
    	}, 30000);
	}
	refreshTweets();
 */
  	   	
   	function convertTime(time){
   		time = time.split(':'); // convert to array

		var hour = Number(time[0]);
		var minutes = time[1];
		var seconds = time[2];
		
		var timeValue;
		var ampmValue;

		if (hour > 0 && hour < 12) {
  			timeValue= hour;
  			ampmValue = 'AM'; 
		} else if (hour > 12) {
  			timeValue= (hour - 12);
  			ampmValue = 'PM';
		} else if (hour === 0) {
  			timeValue = '12';
  			ampmValue = 'AM';
		} else if (hour === 12) {
			timeValue = '12';
			ampmValue = 'PM'; 
		}
		 
		timeValue = timeValue + ":" + minutes +  " " + ampmValue;
		return timeValue;
		 
   	}

/*Script to like a tweet */
	{
   		let tableClick = document.getElementById('following_tweets');
    	tableClick.addEventListener('click', function(evt) {
    		if (evt.target.tagName === 'BUTTON') {
    			let tweeter = evt.target.getAttribute('tweeter');
				let likeCheck = evt.target.getAttribute('likeCheck');
				
				if (likeCheck === 'unliked') {
					var tweetId = evt.target.getAttribute('tweetId');
 					let xhr = new XMLHttpRequest();
     				xhr.open('POST', '/submitLike');
     				xhr.setRequestHeader('Content-Type', 'application/json');
     				xhr.onload = function() {
         				if (xhr.status === 200) {
             				console.log(xhr.responseText);
             				buildTweets();
             				buildTweeters();
         				} else if (xhr.status !== 200) {
             				console.log('Request failed.  Returned status of ' + xhr.status);
         				}
     				}
     			
     				let tweet = {tweetId: tweetId};
     	
     				xhr.send(JSON.stringify(tweet));
    			}
    			
    			if (likeCheck === 'liked') {
					var tweetId = evt.target.getAttribute('tweetId');
 					let xhr = new XMLHttpRequest();
     				xhr.open('POST', '/submitUnlike');
     				xhr.setRequestHeader('Content-Type', 'application/json');
     				xhr.onload = function() {
         				if (xhr.status === 200) {
             				console.log(xhr.responseText);
             				buildTweets();
             				buildTweeters();
         				} else if (xhr.status !== 200) {
             				console.log('Request failed.  Returned status of ' + xhr.status);
         				}
     				}
     			
     				let tweet = {tweetId: tweetId};
     	
     				xhr.send(JSON.stringify(tweet));
    			}
    		}
		});
    }
   </script>
   </html>
